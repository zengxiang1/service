<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zx.learn.dao.SysRoleMapper">
  <resultMap id="BaseResultMap" type="org.zx.learn.model.SysRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="resource" jdbcType="VARCHAR" property="resource" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, resource, parent_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.zx.learn.model.SysRole">
    insert into sys_role (id, role_name, resource, 
      parent_id)
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{resource,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.zx.learn.model.SysRole">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="resource != null">
        resource,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="resource != null">
        #{resource,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.zx.learn.model.SysRole">
    update sys_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="resource != null">
        resource = #{resource,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zx.learn.model.SysRole">
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      resource = #{resource,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="listAllRole" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    from sys_role
  </select>
  <delete id="deleteRoleById" parameterType="java.util.List">
      DELETE FROM sys_role where id in
      <foreach collection="list" item="id" open="(" separator="," close=")" >
          #{id}
      </foreach>
  </delete>

  <select id="listAllTopRole" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    from sys_role where parent_id is null
  </select>

  <select id="listRoleByParent" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    from sys_role where parent_id = #{0}
  </select>
</mapper>